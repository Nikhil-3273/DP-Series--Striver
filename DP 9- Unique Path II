https://leetcode.com/problems/unique-paths-ii/?envType=study-plan-v2&envId=dynamic-programming
int recur(int i, int j, vector<vector<int>>&obstacleGrid, vector<vector<int>>&dp)
{
    if(i==0 && j==0)
    {
        if(obstacleGrid[i][j]!=1) return 1;
        else return 0;
    }
    if(i<0 || j<0) return 0;
    if(obstacleGrid[i][j]==1) return 0;
    if(dp[i][j]!=-1) return dp[i][j];
    return dp[i][j]=recur(i-1,j,obstacleGrid,dp)+recur(i,j-1,obstacleGrid,dp);
}
int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
    int i=obstacleGrid.size(), j=obstacleGrid[0].size();
    vector<vector<int>>dp(i,vector<int>(j,-1));
    return recur(i-1,j-1,obstacleGrid,dp);
}
